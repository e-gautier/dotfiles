#!/usr/bin/env sh

set -e

DARWIN=Darwin
LINUX=Linux
CYGWIN=CYGWIN

VSC_EXTENSIONS=~/dotfiles/vscodium/extensions

CONFIG="install.conf.yaml"
DOTBOT_DIR="lib/dotbot"
DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

install_darwin() {
  . "${BASEDIR}/install_darwin.sh"
}

install_fedora() {
  . "${BASEDIR}/install_fedora.sh"
}

install_debian() {
  . "${BASEDIR}/install_debian.sh"
}

install_binaries() {
  case $(uname) in
  "$DARWIN") # MacOS
    [ -x "$(command -v brew)" ] && install_darwin || echo "brew not found"
    ;;
  "$LINUX") # Linux
    [ -x "$(command -v dnf)"  ] && install_fedora || echo "dnf not found"
    [ -x "$(command -v apt)"  ] && install_debian || echo "apt not found"
    ;;
  *)
    echo "Binaries: nothing were installed."
    ;;
  esac
}

# try to install binaries
read -p "Install binaries ([Y]/n)? " CHOICE
case "$CHOICE" in
  y|Y ) install_binaries;;
  n|N ) ;;
  * ) install_binaries;;
esac

# run dotbot
cd "${BASEDIR}"
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"

# enable tmux user space
systemctl --user enable --now tmux

# restore nftables at pre-up hook
read -p "Apply nftables ([Y]/n)? " CHOICE
case "$CHOICE" in
  n|N ) ;;
  * ) . "${BASEDIR}/install_nftables.sh" ;;
esac

# install vim youcompleteme
read -p "Install vim youcompleteme ([Y]/n)? " CHOICE
case "$CHOICE" in
	n|N ) ;;
	* ) /usr/bin/python3 ${BASEDIR}/vim/bundle/youcompleteme/install.py ;;
esac
